name: maven

on:
  push:
    branches:
      - main
      - snapshot-*

jobs:
  package:
    runs-on: ubuntu-latest
    steps:
      - uses: dbstar-org/setup-maven@v1
      - name: Package with Maven
        run: mvn -B -U clean package -DskipTests=true
  verify:
    needs: package
    runs-on: ubuntu-latest
    steps:
      - uses: dbstar-org/setup-maven@v1
      - name: Verify with Maven
        run: mvn -B -U clean verify
  sonar:
    needs: verify
    runs-on: ubuntu-latest
    steps:
      - uses: dbstar-org/setup-maven@v1
        with:
          java-version: 11
          fetch-depth: 0
      - name: Cache SonarQube packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
      - name: Verify with Maven with SonarQube
        if: secrets.SONAR_PROJECT_KEY != '' && env.SONAR_TOKEN != ''
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
          SONAR_PROJECT_KEY: ${{ secrets.SONAR_PROJECT_KEY }}
        run: mvn -B -U verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=${{ env.SONAR_PROJECT_KEY }}
      - run: env
  deploy:
    needs: verify
    runs-on: ubuntu-latest
    steps:
      - uses: dbstar-org/setup-maven@v1
        id: setup-maven
      - run: cat ~/.m2/settings.xml
      - run: echo '${{ steps.setup-maven.outputs.java-version }}'
      - run: echo '${{ steps.setup-maven.outputs.distribution }}'
      - run: echo '${{ steps.setup-maven.outputs.java-home }}'
      - run: echo '${{ toJSON(needs) }}'
